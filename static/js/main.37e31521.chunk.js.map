{"version":3,"sources":["hooks/Home.js","hooks/About.js","hooks/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Home","useState","count","setCount","className","onClick","About","Navbar","props","id","src","alt","target","href","rel","style","fontSize","setPage","data-activates","App","page","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37e31521.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../bootstrap.min.css';\nimport '../mdb.min.css';\n\nfunction Home() { \n  const [count, setCount] = useState(0);\n\n  return (     \n    <div className=\"container\">   \n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"card text-center\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  Count is {count}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button className=\"btn btn-outline-primary btn-rounded waves-effect\" onClick={() => setCount(count + 1)}>\n                    Increase count\n                  </button>\n                  <button className=\"btn btn-outline-primary btn-rounded waves-effect\" onClick={() => setCount(0)}>\n                    Reset count\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>     \n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport '../bootstrap.min.css';\nimport '../mdb.min.css';\n\nfunction About() { \n  return (     \n    <div className=\"container\">   \n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              About me page\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>     \n  );\n}\n\nexport default About;\n","import React from 'react';\nimport '../bootstrap.min.css';\nimport '../mdb.min.css';\nimport '../style.css';\nimport Home from './Home';\nimport About from './About';\n\nfunction Navbar(props) {  \n  return (      \n    <header>          \n      <div id=\"slide-out\" className=\"side-nav fixed\">\n        <ul className=\"custom-scrollbar\">              \n          <li>\n            <div className=\"logo-wrapper waves-light\">                       \n              <img src=\"https://www.psu.edu/profiles/psu_profile/themes/psu_main/logonew.png\" alt=\"Penn State University\" className=\"img-fluid flex-center\" />          \n            </div>\n          </li>\n          <li>\n            <ul className=\"social\">                                                                    \n              <li>\n                <a target=\"_blank\" href=\"https://www.linkedin.com/in/john-dukewich\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-linkedin\" style={{ fontSize: '2rem' }}></i>\n                </a>\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://github.com/jdukewich\" rel=\"noopener noreferrer\">\n                  <i className=\"fab fa-github-square\" style={{ fontSize: '2rem' }}></i>\n                </a>\n              </li>\n            </ul>\n          </li>\n          <li>\n            <ul className=\"collapsible collapsible-accordion\">\n              <li><div className=\"collapsible-header waves-effect arrow-r nav-div\"><i className=\"fas fa-chevron-right\"></i>Pages<i\n                    className=\"fas fa-angle-down rotate-icon\"></i></div>\n                <div className=\"collapsible-body\">\n                  <ul className=\"list-unstyled\">\n                    <li><div className=\"waves-effect nav-div\" onClick={() => props.setPage(<About />)}>About me</div></li>\n                    <li><div className=\"waves-effect nav-div\" onClick={() => props.setPage(<Home />)}>Home</div></li>\n                  </ul>\n                </div>\n              </li>\n              <li><div className=\"collapsible-header waves-effect arrow-r nav-div\">\n                <i className=\"far fa-envelope\"></i> Contact me<i className=\"fas fa-angle-down rotate-icon\"></i></div>\n                <div className=\"collapsible-body\">\n                  <ul className=\"list-unstyled\">\n                    <li><div className=\"waves-effect nav-div\">FAQ</div></li>\n                    <li><div className=\"waves-effect nav-div\">Write a message</div></li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </li>\n        </ul>\n        <div className=\"sidenav-bg mask-strong\"></div>\n      </div>\n      <nav className=\"navbar fixed-top navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav\">            \n        <div className=\"float-left\">\n          <div data-activates=\"slide-out\" className=\"button-collapse white-text nav-div\"><i className=\"fas fa-bars\"></i></div>\n        </div>            \n        <div className=\"breadcrumb-dn mr-auto\">\n          <p>John Dukewich E-Portfolio</p>\n        </div>\n        <ul className=\"nav navbar-nav nav-flex-icons ml-auto\">\n          <li className=\"nav-item\">\n            <div className=\"nav-link\"><i className=\"fas fa-envelope\"></i> <span className=\"clearfix d-none d-sm-inline-block\">Contact</span></div>\n          </li>\n          <li className=\"nav-item\">\n            <div className=\"nav-link\"><i className=\"fas fa-comments\"></i> <span className=\"clearfix d-none d-sm-inline-block\">Support</span></div>\n          </li>\n          <li className=\"nav-item\">\n            <div className=\"nav-link\"><i className=\"fas fa-user\"></i> <span className=\"clearfix d-none d-sm-inline-block\">Account</span></div>\n          </li>\n        </ul>\n      </nav>\n    </header>   \n  );\n}\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport './bootstrap.min.css';\nimport './mdb.min.css';\nimport Home from './hooks/Home';\nimport Navbar from './hooks/Navbar';\n\nfunction App() {   \n  const [page, setPage] = useState(<Home />);\n\n  return (\n    <div className=\"fixed-sn mdb-skin\">       \n        <Navbar setPage={setPage} />  \n        <main>\n          {page}\n        </main>      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}